{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
dhtmlxEvent(window,"load",function(){
    globalLayout = new dhtmlXLayoutObject(document.body,"2U");  
    globalLayout.cells("a").setWidth(410); 
    globalLayout.cells("a").hideHeader(); 
    globalLayout.cells("b").hideHeader(); 

    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/menu/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('/bundles/ariicore/images/ribbon/') }}" );
    myRibbon.loadStruct("{{ url('json_Admin_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );

    myTree = globalLayout.cells("a").attachTree();
    myTree.setImagesPath("{{ asset('bundles/ariicore/images/tree/') }}");
    myTree.load( "{{ url('xml_Admin_categories_tree') }}" );
    myTree.enableDragAndDrop(true, false);
    myTree.attachEvent("onClick",function(id){
        globalLayout.cells("b").progressOn();
        myGrid.clearAll();
        myGrid.load("{{ url('xml_Admin_connections_grid') }}?id="+id, function() {
            globalLayout.cells("b").progressOff();
        });
    })    

    myGridToolbar = globalLayout.cells("b").attachToolbar();
    myGridToolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    myGridToolbar.loadStruct("{{ url('xml_Admin_repository_toolbar') }}", function () {
        {%if id == '' %}
            myGridToolbar.hideItem("delete_repository");
        {%endif%}
    });
    myGridToolbar.attachEvent("onClick",onClick);

    myGridMenu = new dhtmlXMenuObject();
    myGridMenu.setIconsPath( "{{ asset('arii/images/menu/') }}" );
    myGridMenu.renderAsContextMenu();
    myGridMenu.attachEvent("onClick", onMenuClick);
    myGridMenu.loadStruct("{{ url('xml_Admin_repositories_menu') }}");

    myGrid = globalLayout.cells("a").attachGrid();
    myGrid.selMultiRows = true;
    myGrid.setImagePath("{{ asset('arii/images/treegrid/') }}");
    myGrid.setHeader("{{ "Name"| trans }},{{ "Description"| trans }},{{ "Timezone"| trans }}");
    myGrid.attachHeader("#text_filter,#text_filter,#select_filter");
    myGrid.setInitWidths("300,*,200");
    myGrid.setColAlign("left,left,left");
    myGrid.setColTypes("ro,ro,ro");
    myGrid.enableContextMenu(myGridMenu);
    myGrid.enableLightMouseNavigation( false );
    myGrid.load("{{ url('xml_Admin_repositories_grid') }}");
    myGrid.init();

    myGrid.attachEvent("onRowDblClicked", function (rid) {
        EditRepository(rid);
    });

    var myForm,formData;
    formData = [
        { type: "settings", position: "label-left", labelWidth: 100, inputWidth: 250,labelAlign: "right" },
        {
            type: "hidden",
            name: "id"
        },
        {
            type: "input",
            name: "name",
            label: "{{ "Name" | trans }}",
            required: true,
            note: 
                { text: "{{ "repository.name.note" | trans }}" }
        },
        {
            type: "select",
            name: "db_id",
            label: "{{ "Database" | trans }}",
            connector: "{{ url('xml_Admin_repositories_connections') }}",
            note: 
                { text: "{{ "repository.db.note" | trans }}" }
        },
        {
            type: "input",
            name: "timezone",
            label: "{{ "Time Zone" | trans }}",
            value: "GMT",
            note: 
                { text: "{{ "repository.timezone.note" | trans }}" }
        },
        {
            type: "input",
            name: "description",
            label: "{{ "Description" | trans }}",
            rows: 3,
            note: 
                { text: "{{ "repository.description.note" | trans }}" }
        }
    ];
    myForm = globalLayout.cells("b").attachForm(formData);
    myForm.enableLiveValidation(true);
    {%if id != '' %}
    myForm.load("{{ url('xml_Admin_repository_form') }}?id="+"{{ id }}" );
    {%endif%}
});
        
function onClick(id){
    switch (id){
        case "add_repository":
            NewRepository();
            break;
        case "delete_repository":
            id = myForm.getItemValue("id");
            DeleteRepository(id);
            break;
        case "save_repository":
            if(!myForm.validate())
            {
                dhtmlx.message({
                    title:"Error",
                    type: "error",
                    lifetime: "60000",
                    text: "{{ "Please type in all the required fields!" | trans }}"
                 });
                return;
            }
            myForm.send("{{ url('xml_Admin_repository_save') }}","POST",function(loader,response){
               if(response === "susccess")
               {
                 dhtmlx.message({
                    title:"{{ "Save" | trans }}",
                    type: "Notice",
                    lifetime: "60000",
                    text: "Repository Saved"
                 });
                 GridRefresh();
               }
               else 
               {
                 dhtmlx.message({
                    title:"{{ "Save" | trans }}",
                    type: "error",
                    lifetime: "60000",
                    text: response
                 });
               }
            });
        break;
        default:
            break;
    }
}

function onMenuClick(menuitemId, type)
{
    var rid = myGrid.contextID.split("_")[0];
    switch(menuitemId){
        case "add_repository":
            NewRepository();
            break;
        case "edit_repository":
            EditRepository(rid);
            break;
        case "delete_repository":
            DeleteRepository(rid);
            break;
        break;
        default:
            alert(menuitemId);
    }
    return true;
}

function GridRefresh()
{
    myGrid.clearAll();
    myGrid.load("{{ url('xml_Admin_repositories_grid') }}");
}

function NewRepository() {
    myForm.clear();
    myForm.setItemFocus("name");
    myForm.setItemLabel("fieldset","{{ "New repository" | trans }}");
    toolbarb.hideItem("delete_repository");
}

function EditRepository(id) {
    globalLayout.cells("a").progressOn();
    toolbarb.showItem("delete_repository");
    myForm.setItemLabel("fieldset","{{ "Edit repository" | trans }}");
    myForm.clear();
    myForm.load("{{ url('xml_Admin_repository_form') }}?id="+id, function () {
        globalLayout.cells("a").progressOff();
    });
}

function DeleteRepository(id) {
    dhtmlx.confirm({
     title: "{{ "Delete Repository" | trans }}",
     type: "confirm-error",
     text: "{{ "repository.message.delete" | trans }}",
     callback: function(answer) { if (answer) {
            myGrid.deleteRow(id); 
            mydataprocessor.sendData();
        }
    },
     cancel: "{{ "No" | trans }}",
     ok: "{{ "Yes" | trans }}" });
 }
 
 function GlobalRefresh() { }
</script>

{% endblock %}
