{# src/Arii/JIDBundle/Resources/views/Default/history.html.twig #}
{% extends "AriiJIDBundle::layout.html.twig" %}
{% block dhtmlx %}
	<title>Ari'i</title>
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/ariicore/dhtmlx/dhtmlx_pro_full/dhtmlx.css') }}" />
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlx_pro_full/dhtmlx.js') }}" type="text/javascript"></script>
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlxCalendar/codebase/ext/dhtmlxtimepicker.js') }}" type="text/javascript" charset="utf-8"></script>
        <link rel="stylesheet" type="text/css" href="{{ asset('bundles/ariicore/dhtmlx/dhtmlxWindows/codebase/status_toolbar_layout.css') }}" />
{% endblock dhtmlx %}
{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section table_section">
	<!--[if !IE]>start title wrapper<![endif]-->
	<div class="title_wrapper">
		<h2>{{ "Activities" | trans }}</h2>
<ul  class="section_menu">
      <li><a href="{{ url('arii_JID_orders') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/list.png') }}"/>&nbsp;{{ "List" | trans }}</span></span></a></li>
      <li><a href="{{ url('arii_JID_orders_timeline') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/timeline.png') }}"/>&nbsp;{{ "Timeline" | trans }}</span></span></a></li>
    <li><a href="{{ url('arii_JID_orders_last') }}" class="active"><span><span><img src="{{ asset('bundles/ariicore/images/wa/monitor.png') }}"/>&nbsp;{{ "Monitor" | trans }}</span></span></a></li>
</ul>
                <span class="title_wrapper_left"></span>
		<span class="title_wrapper_right"></span>
	</div>
	<!--[if !IE]>end title wrapper<![endif]-->
<!--[if !IE]>start section content<![endif]-->
	<div class="section_content">
		<!--[if !IE]>start section content top<![endif]-->
		<div class="sct">
			<div class="sct_left">
				<div class="sct_right">
					<div class="sct_left">
                                                <div class="sct_right">
    <!--div id="mygrid" style="height:326px;background-color:white;width:100%"></div> -->
    <div id="mygrid" style="height:576px;background-color:white;position:relative;overflow:hidden;"></div>
		
						</div>
					</div>
				</div>
			</div>
		</div>
		<!--[if !IE]>end section content top<![endif]-->
		<!--[if !IE]>start section content bottom<![endif]-->
		<span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
		<!--[if !IE]>end section content bottom<![endif]-->
		
	</div>
	<!--[if !IE]>end section content<![endif]-->
</div>
<div id="contextArea"></div>
<!--[if !IE]>end section<![endif]-->
<script language="javascript">
var autorefresh = setInterval( "GridRefresh()",30000);
var max_history = 0; // pas d'historique
{% if  app.request.get('ordered')>0 %}
var ordered = 1;
{% else %}
var ordered = 0; // que des standalone
{% endif %}
menu = new dhtmlXMenuObject("contextArea");
menu.setIconsPath( "{{ asset('bundles/ariicore/images/menu/') }}" );
menu.renderAsContextMenu();
menu.attachEvent("onClick", onButtonClick);
menu.loadStruct("{{ url('arii_JID_menu_orders') }}");

var dhxLayout = new dhtmlXLayoutObject("mygrid","2E");
var toolbar = dhxLayout.attachToolbar();
toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
toolbar.loadStruct("{{ url('xml_JID_orders_toolbar_activities') }}", function() {
{% if  app.request.get('ordered')>0 %}
toolbar.setItemState("ordered",true);
{% endif %}
});
/*
toolbar.attachEvent("onStateChange",function(id,state){
    dhtmlxAjax.get("{{ url('arii_global_toolbar_update') }}?"+id+"="+state,function(loader){
        GlobalRefresh();
    });
});
*/
dhxLayout.cells("a").hideHeader();
dhxLayout.cells("a").setHeight(295);
    
var mygrid = dhxLayout.cells("a").attachGrid();
//mygrid.selMultiRows = true;
mygrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
mygrid.enableTreeCellEdit(false);
mygrid.setHeader("{{ "Spooler" | trans }},{{ "Job chain" | trans }},{{ "Order" | trans }},{{ "State" | trans }},#cspan,{{ "Status" | trans }},{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Information" | trans }}");
mygrid.attachHeader("#select_filter,#text_filter,#text_filter,#numeric_filter,#select_filter,#select_filter,#text_filter,#text_filter,#text_filter");
mygrid.setInitWidths("100,*,140,50,100,80,130,130,*");
mygrid.setColAlign("left,left,left,right,left,center,right,right,left");
mygrid.setColTypes("ro,ro,ro,ro,ro,ro,ro,ro,ro");
mygrid.setColSorting("str,str,str,str,str,str,date,date,str");
mygrid.enableContextMenu(menu);
mygrid.attachEvent("onBeforeContextMenu", onShowMenu);

var sb = dhxLayout.cells("a").attachStatusBar();
dhxLayout.cells("a").vs[dhxLayout.cells("a").av].sbHeight = 30;
sb.setText('<div id="recinfoArea"></div>');
mygrid.enablePaging(true, 20, 5, "recinfoArea");
mygrid.setPagingSkin("toolbar","dhx_skyblue");
mygrid.setPagingWTMode(true,true,true,[ 5, 10, 20, 50, 100, 200, 400, 800]);
// mygrid.setFiltrationLevel(-2);
mygrid.init();
mygrid.setSkin('dhx_skyblue');
mygrid.enableAlterCss("even_row","odd_row");
mygrid.i18n.paging={
      results: "{{ "Results" | trans }}",
      records: "{{ "From" | trans }} ",
      to: " {{ "to" | trans }} ",
      page:"{{ "Page" | trans }} ",
      perpage: "{{ "rows per page" | trans }}",
      first: "{{ "To first Page" | trans }}",
      previous:"{{ "Previous Page" | trans }}",
      found:"{{ "Found records" | trans }}",
      next:"{{ "Next Page" | trans }}",
      last:"{{ "To last Page" | trans }}",
      of:" {{ "of" | trans }} ",
      notfound:"{{ "No Records Found" | trans }}" };
 
{% if  app.request.get('status') != '' %}
max_history=20;
mygrid.loadXML( "{{ url('xml_JID_orders_last') }}?ordered="+ordered+"&history="+max_history, function() {
    toolbar.setItemState("deploy",true);
    toolbar.setItemState("history",true);
    mygrid.getFilterElement(2).value='{{ app.request.get('status') }}';
//    mygrid.filterBy(2,"{{ app.request.get('status') }}",true);
    mygrid.expandAll();
});
{% else %}
mygrid.loadXML( "{{ url('xml_JID_orders_last') }}?history="+max_history);
{% endif %}
mygrid.enableLightMouseNavigation( true );
// mygrid.attachEvent("onXLE",function(){ });
mygrid.attachEvent("onRowDblClicked",function(id, value){
     if(mygrid.getUserData(id,"type")==="step_job")
    {
       dhxLayout.cells("b").progressOn();
       id = id.substr(1);
       dhxLayout.cells("b").setText("{{ "Job" | trans }}");
       tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);
       jobloggrid.load( "{{ url('xml_JID_job_log') }}?id="+id, function () {
            tabbar.showTab("b3");
            tabbar.hideTab("b2",true);
            tabbar.hideTab("b4",true);
            dhxLayout.cells("b").progressOff();
        });
    } 
    else
    {
          dhxLayout.cells("b").progressOn();
          dhxLayout.cells("b").setText("{{ "Order" | trans }}");
          tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_order') }}?id="+id,true);
          // dans tous les cas on recharge le log
          hstgrid.load( "{{ url('arii_JID_grid_history_order') }}?id="+ id, function () {
              loggrid.load( "{{ url('arii_JID_order_log') }}?id="+ id, function () {
              // tabbar.cells("b5").attachURL("{{ url('arii_JID_process_graphviz') }}?order_id="+id,true);
              dhxLayout.cells("b").expand();
              toolbar.setItemState("contract",true);
              dhxLayout.cells("b").progressOff();
            });
          });
    }
});

toolbar.attachEvent( "onClick", function(id, value) {
    switch (id) {
        case "refresh":
            GridRefresh();
        break;
        case "deploy":
            mygrid.expandAll();
        break;
        case "print":
            // mygrid.setColumnHidden(1,true);
            mygrid.printView();
            break;
    case "start_jobs":
        StartJobs();
        break;
    case "stop_jobs":
        StopJobs();
        break;
    case "unstop_jobs":
        UnstopJobs();
        break;
    case "rss":
        document.location.href = "{{ url('rss_JID_history_job') }}";
        break;
    case "menu":
        document.location.href = "{{ url('arii_JID_index') }}";
        break;
    case "menu_history":
        document.location.href = "{{ url('arii_JID_history') }}";
        break;
    case "menu_orders":
        document.location.href = "{{ url('arii_JID_orders') }}";
        break;
    case "menu_chains":
        document.location.href = "{{ url('arii_JID_chains') }}";
        break;
    case "menu_planned":
        document.location.href = "{{ url('arii_JID_planned') }}";
        break;
    case "menu_spoolers":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_events":
        document.location.href = "{{ url('arii_JID_events') }}";
        break;
    case "menu_ha":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_msg":
        document.location.href = "{{ url('arii_JID_messages') }}";
        break;
        default:
            alert(id);
    }
});

toolbar.attachEvent("onStateChange", function(id,state) {
    switch (id) {
        case 'deploy':
            if (state) {
                mygrid.expandAll();
            }
            else {
                mygrid.collapseAll();
            }
            break;
        case 'show_time':
            mygrid.setColumnHidden(9,!state);
            break;
        case 'history':
            if (state) {
                max_history = 20;
            }
            else {
                max_history = 0;
            }
            GridRefresh();
            break;
        case 'ordered':
            if (state) {
                ordered = 1;
            }
            else {
                ordered = 0;
            }
            GridRefresh();
            break;
        case 'contract':
            if (state) {
                dhxLayout.cells("b").expand();
                mygrid.enablePaging(true, 10, 5, "recinfoArea"); 
            }
            else {
                dhxLayout.cells("b").collapse();
                mygrid.enablePaging(true, 20, 5, "recinfoArea"); 
             }
             GridRefresh();
            break;
        case 'gantt':
            mygrid.setColumnHidden(5,state);      
            mygrid.setColumnHidden(6,state);      
            mygrid.setColumnHidden(7,state);  
            mygrid.setColumnHidden(8,state);   
            mygrid.setColumnHidden(9,!state);  
            break;
        default:
            break;
    }
 });

var tabbar = dhxLayout.cells("b").attachTabbar();
tabbar.setImagePath("{{asset("arii/dhtmlx/dhtmlxTabbar/codebase/imgs/")}}");
tabbar.setSkin("dhx_skyblue");
tabbar.addTab("b1","{{ "Information" | trans }}","100px");
tabbar.addTab("b2","{{ "Log" | trans }}","100px");
tabbar.addTab("b3","{{ "History" | trans }}","100px");
tabbar.setTabActive("b1");

tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}",true);

var loggrid = tabbar.cells("b2").attachGrid();
loggrid.setHeader("{{ "Date" | trans }},{{ "Type" | trans }},{{ "Message" | trans }},{{ "Code" | trans }}");
loggrid.attachHeader("#text_filter,#select_filter,#text_filter,#select_filter");
loggrid.setInitWidths("160,40,*,60");
loggrid.setColAlign("right,left,left,right");
loggrid.setColTypes("ro,ro,ro,ro");
loggrid.setColSorting("date,str,str,int");
loggrid.init();
loggrid.setSkin('dhx_skyblue');

var hstgrid = tabbar.cells("b3").attachGrid();
hstgrid.setHeader("{{ "State" | trans }},{{ "Step" | trans }},{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Duration" | trans }},{{ "Message" | trans }}");
hstgrid.attachHeader("#select_filter,#select_filter,#text_filter,#text_filter,#text_filter,#text_filter");
hstgrid.setInitWidths("200,60,140,140,100,*");
hstgrid.setColTypes("tree,ro,ro,ro,ro,ro");
hstgrid.setColAlign("left,right,right,right,right,left");
hstgrid.setColSorting("str,int,date,date,str,str");
hstgrid.enableTreeGridLines(true);
hstgrid.enableTreeCellEdit(false);
hstgrid.setSkin('dhx_skyblue');
hstgrid.init();
hstgrid.setSkin('dhx_skyblue');

hstgrid.enableAlterCss("even_row","odd_row");
/*
dhtmlxEvent (document.getElementById('master_checkbox'), "click", function(ev){
            //alert("Hello, world!"+ev);
            var value = document.getElementById('master_checkbox').checked;
            mygrid.forEachRow(function(id){
                if (mygrid.getUserData(id,"jobtype") === "instance" || mygrid.getUserData(id,"jobtype") === "ordered_job")
                {
                    mygrid.cells(id,1).setValue(value);
                }
            });
});
*/
dhxLayout.cells("b").collapse();

function GridRefresh() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
//    toolbar.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
//    var page_number = mygrid.currentPage;
var row = mygrid.getSelectedRowId();
alert(row);
    mygrid.loadXML("{{ url('xml_JID_orders_last') }}?time="+seconds+"&history="+max_history+"&ordered="+ordered, function(){
//        mygrid.changePage(page_number);
mygrid.selectRow(row); 
        mygrid.refreshFilters();
        mygrid.filterByAll();
    });    
}

function GlobalRefresh() {
    GridRefresh();
}

var dhxWins = new dhtmlXWindows();
dhxWins.enableAutoViewport(false);
dhxWins.attachViewportTo("wrapper");
dhxWins.setImagePath("{{ asset('bundles/ariicore/js/dhtmlx/dhtmlxWindows/codebase/imgs/') }}");

/* Gestion du menu contextuel */
function onButtonClick(menuitemId, type) {
    var data = mygrid.contextID.split("_");
    //rowInd_colInd;
    var rId = data[0];
    var cInd = data[1];
//     mygrid.setRowTextStyle(data[0], "color:" + menuitemId.split("_")[1]);
    // alert("rId "+rId+" cInd "+cInd);
    switch (menuitemId) {

       case "show_info":
            JobInfo( rId );
        break;
        case "doc":
            window.open('{{ url('arii_JID_job_doc') }}?id='+rId,'arii_doc');
            break;
       case "show_history":
            document.location.href = "{{ url('arii_JID_history_job') }}?id="+rId;
        break;
        case "start_task":
            StartJob( rId );
        break;
        case "show_why":
            ShowWhy( rId);
            break;
        case "kill":
            KillJob( rId );
            break;
        case "stop":
            StopJob( rId );
        break;
        case "unstop":
            UnstopJob( rId );
        break;
        case "pause_spooler":
            PauseSpooler(rId);
        break;
        case "continue_spooler":
            ContinueSpooler(rId);
        break;
        case "check_spooler":
            CheckSpooler(rId);
        break;
        case "terminate_spooler":
            TerminateSpooler(rId);
        break;
        case "abort_spooler":
            AbortSpooler(rId);
        break;
        case "purge":
            PurgeJob( rId );
        break;
        default:
            alert(menuitemId);    
    }
    return true;
}

function StartJobs()
{
    var ids = mygrid.getCheckedRows(1);    
    if (ids === "")
    {
        dhtmlx.message({
        type: "Notice",
        expire: 5000,
        width: "500px",
        text: "{{ "No job selected !" | trans }}" });
        return false;
    }
    var largeur = 600;  
    msg = dhxWins.createWindow( "startJobs" , (document.getElementById("wrapper").offsetWidth-largeur)/2, 0, largeur, 500 ); 
    msg.setText("{{ "Start jobs" | trans }}");

    var winLayout;
    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();   

    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_start_jobs') }}");
    toolbar.attachEvent("onClick",function(buttonId){
        switch (buttonId) {
            case "submit":
                dhxgrid.forEachRow(function(id){
                    dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=start_job&job_id="+id,function(loader,response){
                        dhtmlx.message({
                        type: "Notice",
                        expire: 5000,
                        width: "500px",
                        text: loader.xmlDoc.responseText });
                        GridRefresh();});
                    });
                msg.close();
                break;
            case "cancel":
                msg.close();
                break;
            default:
                alert(buttonId);
        }
        return true;
    });

    var dhxgrid = winLayout.cells("a").attachGrid();
    dhxgrid.selMultiRows = true;
    dhxgrid.setHeader("{{ "Job Name" | trans }},{{ "Status" | trans }}");
    dhxgrid.setColTypes("ro,ro");
    dhxgrid.setInitWidths("*,180");
    dhxgrid.setPagingSkin("toolbar","dhx_skyblue");
    dhxgrid.init();
    dhxgrid.loadStruct("{{ url('xml_JID_job_list') }}?ids="+ids);
    return true;
}

function StopJobs()
{
    var ids = mygrid.getCheckedRows(1);    
    if (ids === "")
    {
        return false;
    }

    var largeur = 600;  
    msg = dhxWins.createWindow( "stopJobs" , (document.getElementById("wrapper").offsetWidth-largeur)/2, 200, largeur, 500 ); 
    msg.setText("{{ "Stop jobs" | trans }}");

    var winLayout;
    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();   

    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_stop_jobs') }}");
    toolbar.attachEvent("onClick",function(buttonId){
        switch (buttonId) {
            case "stop":
                dhxgrid.forEachRow(function(id){
                    dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=stop_job&job_id="+id,function(loader,response){
                        dhtmlx.message({
                        type: "Notice",
                        expire: 5000,
                        width: "500px",
                        text: loader.xmlDoc.responseText });
                        GridRefresh();});
                    });
                msg.close();
                break;
            case "cancel":
                msg.close();
                break;
            default:
                alert(buttonId);
        }
        return true;
    });

    var dhxgrid = winLayout.cells("a").attachGrid();
    dhxgrid.selMultiRows = true;
    dhxgrid.setHeader("{{ "Job Name" | trans }},{{ "Status" | trans }}");
    dhxgrid.setColTypes("ro,ro");
    dhxgrid.setInitWidths("*,180");
    dhxgrid.setPagingSkin("toolbar","dhx_skyblue");
    dhxgrid.init();
    dhxgrid.loadStruct("{{ url('xml_JID_job_list') }}?ids="+ids);
return true;        
}

function UnstopJobs()
{
    var ids = mygrid.getCheckedRows(1);    
    if (ids === "")
    {
        return false;
    }


    var largeur = 600;  
    msg = dhxWins.createWindow( "unstopJobs" , (document.getElementById("wrapper").offsetWidth-largeur)/2, 200, largeur, 500 ); 
    msg.setText("{{ "Unstop jobs" | trans }}");

    var winLayout;
    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();   

    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_unstop_jobs') }}");
    toolbar.attachEvent("onClick",function(buttonId){
        switch (buttonId) {
            case "unstop":
                dhxgrid.forEachRow(function(id){
                    dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=unstop_job&job_id="+id,function(loader,response){
                        dhtmlx.message({
                        type: "Notice",
                        expire: 5000,
                        width: "500px",
                        text: loader.xmlDoc.responseText });
                        GridRefresh();});
                    });
                msg.close();
                break;
            case "cancel":
                msg.close();
                break;
            default:
                alert(buttonId);
        }
        return true;
    });

    var dhxgrid = winLayout.cells("a").attachGrid();
    dhxgrid.selMultiRows = true;
    dhxgrid.setHeader("{{ "Job Name" | trans }},{{ "Status" | trans }}");
    dhxgrid.setColTypes("ro,ro");
    dhxgrid.setInitWidths("*,180");
    dhxgrid.setPagingSkin("toolbar","dhx_skyblue");
    dhxgrid.init();
    dhxgrid.loadStruct("{{ url('xml_JID_job_list') }}?ids="+ids);

return true;
}

var dhxCalendar;
var msg;

function StartJob( id ) { 
    var largeur = 600;
        msg = dhxWins.createWindow( "msgwin" , (document.getElementById("wrapper").offsetWidth-largeur)/2, 50, largeur, 500 );
        msg.setText("{{ "Start job" | trans }} "+id);
    var winLayout;
    winLayout = msg.attachLayout("2E");
    winLayout.cells("a").hideHeader();
    winLayout.cells("a").setHeight(300);
    winLayout.cells("b").setText("Parameters");
    winLayout.cells("b").hideHeader();

    winLayout.cells("a").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);
    
    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_start_job') }}",function(){
        GBCalendar = new dhtmlXCalendarObject(toolbar.getInput('ref_date'));
        GBCalendar.setDateFormat("%Y-%m-%d %H:%i:%s");
        GBCalendar.setWeekStartDay(1);
    });
    
    var toolbar2;
    toolbar2 = winLayout.cells("b").attachToolbar();
    toolbar2.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar2.loadStruct("{{ url('arii_JID_toolbar_start_job_param') }}");

    var dhxgrid = winLayout.cells("b").attachGrid();
    dhxgrid.selMultiRows = true;
    dhxgrid.setHeader("{{ "Name" | trans }},{{ "Value" | trans }}");
    dhxgrid.setColTypes("ed,ed");
    dhxgrid.setInitWidths("*,*");
    dhxgrid.setPagingSkin("toolbar","dhx_skyblue");
    dhxgrid.init();
    dhxgrid.loadStruct("{{ url('xml_JID_start_job_parameters') }}?id="+id);

    toolbar.attachEvent("onClick",function(itemid){
        switch(itemid) {
            case "submit":
                msg.progressOn();
                var params = new Array();
                dhxgrid.forEachRow(function(id){
                    var param = dhxgrid.cells(id,0).getValue() + "=" + encodeURIComponent(dhxgrid.cells(id,1).getValue());
                    params.push(param);
                });
                var paramsStr = params.join(",");
                var start_time = toolbar.getValue("ref_date");
                dhtmlx.message({
                type: "Notice",
                text: "{{ "Start job" | trans }} <strong>"+id+"</strong>" });
                msg.close();
                dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=start_job&params="+encodeURIComponent(params)+"&time="+start_time+"&job_id="+id,function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    GridRefresh();
                });
                break;
            case "cancel":
                msg.close();
                break;
            default:
                alert(itemid);
                break;
        }
        return true;
    });
    
    toolbar2.attachEvent("onClick",function(itemid){
        switch(itemid) {
            case "new":
                dhxgrid.addRow(dhxgrid.getRowsNum()+1,"");
                break;
            default:
                break;
        }
        return true;
    });

return true;
}

function KillJob( id ) { 
    var largeur = 600;
        msg = dhxWins.createWindow( "msgwin" ,  (document.getElementById("wrapper").offsetWidth-largeur)/2, 200, largeur, 400 );
        msg.setText("{{ "Kill job" | trans }} "+id);

    var winLayout;
    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();
    winLayout.cells("a").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);

    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_kill_job') }}");

    toolbar.attachEvent("onClick",function(itemid){
        switch (itemid) {
            case "stop":
                msg.progressOn();
                dhtmlx.message({
                type: "Notice",
                text: "{{ "Kill job" | trans }} <strong>"+id+"</strong>" });
                msg.close();
                dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=kill_task&id="+id,function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    GridRefresh();
                });
                break;
            case "cancel":
                msg.close();
                break;
            default: 
                break;
        }
        return true;
    });
    
return true;
}

function ShowWhy( id ) { 
    largeur = 900;
    msg = dhxWins.createWindow( "msgwin" ,  (document.getElementById("wrapper").offsetWidth-largeur)/2, 50, largeur, 550 );
    msg.setText("{{ "Diagnostic" | trans }} ");

    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();
    winLayout.cells("a").progressOn();
    
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_job_why') }}");
    toolbar.attachEvent("onClick",function(buttonId){
        switch (buttonId) {
            case "cancel":
                msg.close();
                break;
            default:
                alert(buttonId);
        }
        return true;
    });

    var dhxgrid = winLayout.cells("a").attachGrid();
    dhxgrid.setHeader("{{ "Name" | trans }},{{ "Value" | trans }}");
    dhxgrid.setColTypes("tree,ro");
    dhxgrid.enableTreeGridLines(true);
    dhxgrid.setInitWidths("400,*");
    dhxgrid.init();
    dhxgrid.load("{{ url('arii_XML_Command') }}?command=why_job&job_id="+id, function () {
        winLayout.cells("a").progressOff();    
    });
}

function StopJob( id ) { 
    var largeur = 600;
        msg = dhxWins.createWindow( "msgwin" ,  (document.getElementById("wrapper").offsetWidth-largeur)/2, 200, largeur, 400 );
        msg.setText("{{ "Stop job" | trans }} "+id);

    var winLayout;
    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();
    winLayout.cells("a").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);

    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_stop_job') }}");

    toolbar.attachEvent("onClick",function(itemid){
        switch (itemid) {
            case "stop":
                msg.progressOn();
                dhtmlx.message({
                type: "Notice",
                text: "{{ "Stop job" | trans }} <strong>"+id+"</strong>" });
                msg.close();
                dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=stop_job&job_id="+id,function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    GridRefresh();
                });
                break;
            case "cancel":
                msg.close();
                break;
            default: 
                break;
        }
        return true;
    });
    
return true;
}

function PurgeJob( id ) { 
    var largeur = 600;
        msg = dhxWins.createWindow( "msgwin" ,  (document.getElementById("wrapper").offsetWidth-largeur)/2, 200, largeur, 400 );
        msg.setText("{{ "Purge job" | trans }} "+id);

    var winLayout;
    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();
    winLayout.cells("a").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);

    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_purge_job') }}");

    toolbar.attachEvent("onClick",function(itemid){
        switch (itemid) {
            case "stop":
                msg.progressOn();
                dhtmlx.message({
                type: "Notice",
                text: "{{ "Purge job" | trans }} <strong>"+id+"</strong>" });
                msg.close();
                dhtmlxAjax.post("{{ url('arii_JID_history_purge') }}","job_id="+id,function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    GridRefresh();
                });
                break;
            case "cancel":
                msg.close();
                break;
            default: 
                break;
        }
        return true;
    });
    
return true;
}

function UnstopJob( id ) { 
    var largeur = 600;
        msg = dhxWins.createWindow( "msgwin" ,  (document.getElementById("wrapper").offsetWidth-largeur)/2, 200, largeur, 400 );
        msg.setText("{{ "Unstop job" | trans }} "+id);

    var winLayout;
    winLayout = msg.attachLayout("1C");
    winLayout.cells("a").hideHeader();
    winLayout.cells("a").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);

    var toolbar;
    toolbar = winLayout.cells("a").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_unstop_job') }}");

    toolbar.attachEvent("onClick",function(itemid){
        switch (itemid) {
            case "unstop":
                msg.progressOn();
                dhtmlx.message({
                type: "Notice",
                text: "{{ "Unstop job" | trans }} <strong>"+id+"</strong>" });
                msg.close();
                dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=unstop_job&job_id="+id,function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    GridRefresh();
                });
                break;
            case "cancel":
                msg.close();
                break;
            default: 
                break;
        }
        return true;
    });

return true;    
}

function PauseSpooler(rid)
{
    dhxLayout.cells("a").progressOn();
    dhtmlxAjax.get("{{ url('arii_XML_Command') }}?command=pause_spooler&spooler_id="+rid,function(loader,response){
        dhxLayout.cells("a").progressOff();
        dhtmlx.message({
            type: "Notice",
            expire: 10000,
            width: "500px",
            text: loader.xmlDoc.responseText
        });
        CheckSpooler(rid);
    });
    return true;
}

function ContinueSpooler(rid)
{
    dhxLayout.cells("a").progressOn();
    dhtmlxAjax.get("{{ url('arii_XML_Command') }}?command=continue_spooler&spooler_id="+rid,function(loader){
        dhxLayout.cells("a").progressOff();
        dhtmlx.message({
            type: "Notice",
            expire: 10000,
            width: "500px",
            text: loader.xmlDoc.responseText
        });
        CheckSpooler(rid);
    });
    return true;
}

function TerminateSpooler(rid)
{
    dhxLayout.cells("a").progressOn();
    dhtmlxAjax.get("{{ url('arii_XML_Command') }}?command=restart_spooler&spooler_id="+rid,function(loader){
        dhxLayout.cells("a").progressOff();
        dhtmlx.message({
            type: "Notice",
            expire: 10000,
            width: "500px",
            text: loader.xmlDoc.responseText
        });
        CheckSpooler(rid);
    });
    return true;
}

function CheckSpooler(rid)
{
    dhxLayout.cells("a").progressOn();
    dhtmlxAjax.get("{{ url('arii_JID_spooler_update') }}?id="+rid,function(loader){
        dhxLayout.cells("a").progressOff();
        dhtmlx.message({
            type: "Notice",
            expire: 10000,
            width: "500px",
            text: loader.xmlDoc.responseText
        });
        GridRefresh();
    });
    return true;
}

function AbortSpooler(rid)
{
    dhxLayout.cells("a").progressOn();
    dhtmlxAjax.get("{{ url('arii_XML_Command') }}?command=abort_spooler&spooler_id="+rid,function(loader){
        dhxLayout.cells("a").progressOff();
        dhtmlx.message({
            type: "Notice",
            expire: 10000,
            width: "500px",
            text: loader.xmlDoc.responseText
        });
        GridRefresh();
    });
    return true;
}

function onShowMenu(rowId, celInd, grid) {
    if(mygrid.getUserData(rowId,"type")==="folder")
    {
        return false;
    }
    var status = grid.cells(rowId, 2 ).getValue();    
    menu.hideItem("start_task");
    menu.hideItem("edit_sep_1");
    menu.hideItem("edit_sep_2");
    menu.hideItem("show_history");
    menu.hideItem("doc");
    menu.hideItem("kill");
    menu.hideItem("stop");
    menu.hideItem("unstop");
    menu.hideItem("kill");
    menu.hideItem("show_why");
    menu.hideItem('check_spooler');
    menu.hideItem('pause_spooler');
    menu.hideItem('continue_spooler');
    menu.hideItem('purge');
    menu.hideItem('terminate_spooler');
    menu.hideItem('pause_spooler');
    menu.hideItem('continue_spooler');    
    // Cas du spooler
    if (mygrid.getUserData(rowId, "type" )=='spooler') {
        menu.showItem('check_spooler');
        {% if is_granted('ROLE_OPERATOR') %}
        menu.showItem('terminate_spooler');
        if (status ==='RUNNING') {
            menu.showItem('pause_spooler');    
        }
        else {
            menu.showItem('continue_spooler');    
        }
        {% endif %} 
        return true;
    } 
    menu.showItem('edit_sep_1');  
    menu.showItem("show_history");
    {% if is_granted('ROLE_OPERATOR') %}
    menu.showItem("start_task");
    menu.showItem('purge');
    {% endif %}
    switch (status) {
    case 'SUCCESS':
        break;
    case 'FAILURE':
        break;
    case 'RUNNING':
        break;
    default:
        // Cas de l'instance
        {% if is_granted('ROLE_OPERATOR') %}
            if (grid.getUserData(rowId, "jobtype" )=='instance') {
                // on ne demarre pas une tache RUNNING
                menu.showItem("kill");
            }
        {% endif %}
        break;
    }
    {% if is_granted('ROLE_OPERATOR') %}
    // job stoppé
    if (grid.cells(rowId, 3).getValue()== 'STOP') {    
        menu.showItem("unstop");
    }
    else {
        menu.showItem("stop");
    }
    // Un job ordonné ne peut être démarré 
    if (grid.getUserData(rowId, "jobtype" )!='ordered_job') {
        menu.showItem("start_task");
    }
    {% endif %} 
    menu.showItem('edit_sep_1');  
    menu.showItem("doc");
return true;
}
</script>
{% endblock %}
{% block calendar %}      
    {{ render(controller("AriiJIDBundle:Sidebar:calendar", { 'mode': 'Past'} )) }}
{% endblock %}