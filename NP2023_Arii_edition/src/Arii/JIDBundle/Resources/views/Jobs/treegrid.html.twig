{# src/Arii/JIDBundle/Resources/views/History/list.html.twig #}
{% extends "AriiJIDBundle::layout.html.twig" %}
{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section table_section">
	<!--[if !IE]>start title wrapper<![endif]-->
	<div class="title_wrapper">
		<h2>{{ "Jobs" | trans }}</h2>
<ul  class="section_menu">
{% if arii_pro %}
    <li><a href="{{ url('arii_JID_jobs_treegrid') }}" class="active"><span><span><img src="{{ asset('bundles/ariicore/images/wa/tree.png') }}"/>&nbsp;{{ "Tree" | trans }}</span></span></a></li>
{% endif %}
    <li><a href="{{ url('arii_JID_jobs_grid') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/list.png') }}"/>&nbsp;{{ "List" | trans }}</span></span></a></li>
{% if arii_pro %}
    <li><a href="{{ url('arii_JID_history_timeline') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/timeline.png') }}"/>&nbsp;{{ "Timeline" | trans }}</span></span></a></li>
{% endif %}
</ul>
                <span class="title_wrapper_left"></span>
		<span class="title_wrapper_right"></span>
	</div>
	<!--[if !IE]>end title wrapper<![endif]-->
<!--[if !IE]>start section content<![endif]-->
	<div class="section_content">
		<!--[if !IE]>start section content top<![endif]-->
		<div class="sct">
			<div class="sct_left">
				<div class="sct_right">
					<div class="sct_left">
                                                <div class="sct_right">
    <!--div id="mygrid" style="height:326px;background-color:white;width:100%"></div> -->
    <div id="mygrid" style="height:556px;background-color:white;position:relative;overflow:hidden;"></div>
		
						</div>
					</div>
				</div>
			</div>
		</div>
		<!--[if !IE]>end section content top<![endif]-->
		<!--[if !IE]>start section content bottom<![endif]-->
		<span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
		<!--[if !IE]>end section content bottom<![endif]-->
		
	</div>
	<!--[if !IE]>end section content<![endif]-->
</div>
<!--[if !IE]>end section<![endif]-->
<script language="javascript">
/*
var w = window,
d = document,
e = d.documentElement,
g = d.getElementsByTagName('body')[0],
x = w.innerWidth || e.clientWidth || g.clientWidth,
y = w.innerHeight|| e.clientHeight|| g.clientHeight;

var obj = document.getElementById('mygrid');
obj.style.height = (y-300)+"px";
*/
var autorefresh = setInterval( "GridRefresh()",30000);
var max_history = 0; // pas d'historique
{% if  app.request.get('ordered')>0 %}
var ordered = 1;
{% else %}
var ordered = 0; // que des standalone
{% endif %}

menu = new dhtmlXMenuObject(null);
menu.setIconsPath( "{{ asset('bundles/ariicore/images/menu/') }}" );
menu.renderAsContextMenu();
menu.loadStruct("{{ url('arii_JID_menu_history') }}");

var dhxLayout = new dhtmlXLayoutObject("mygrid","2E");
var toolbar = dhxLayout.attachToolbar();
toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
toolbar.loadStruct("{{ url('xml_JID_toolbar_history') }}", function() {
{% if  app.request.get('ordered')>0 %}
toolbar.setItemState("ordered",true);
{% endif %}
});
toolbar.attachEvent("onValueChange",function(id,value){
       dhxLayout.cells("a").progressOn();
       dhtmlxAjax.get( "{{ url('arii_session_update') }}?ref_past="+value, function() {
            dhxLayout.cells("a").progressOff();
            GlobalRefresh();
       });
});
dhxLayout.cells("a").hideHeader();
dhxLayout.cells("a").setHeight(295);
    
var mygrid = dhxLayout.cells("a").attachGrid();
mygrid.selMultiRows = true;
mygrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
mygrid.enableTreeCellEdit(false);
mygrid.setHeader("{{ "Location" | trans }},#cspan,{{ "Status" | trans }},#cspan,#cspan,{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Duration" | trans }},{{ "Exit Code" | trans }},{{ "Next start time" | trans }},&nbsp;");
mygrid.attachHeader("#text_filter,#cspan,#select_filter,#select_filter,#cspan,#text_filter,#text_filter,#text_filter,#numeric_filter,#text_filter,#rspan");
mygrid.setInitWidths("0,*,90,0,30,130,130,130,60,120,20");
mygrid.setColAlign("left,left,center,center,center,right,right,right,right,right,right");
mygrid.setColTypes("ro,tree,ro,ro,ro,ro,ro,ro,ro,ro,ro");
mygrid.setColSorting("str,str,str,str,str,date,date,str,str,str,date");
mygrid.setColumnHidden(9,true);
mygrid.enableTreeGridLines(false);
mygrid.enableContextMenu(menu);
mygrid.attachEvent("onBeforeContextMenu", onShowMenu);
mygrid.attachEvent("onOpenEnd",function(index, state) {
{% if arii_save_states %}
    mygrid.saveOpenStates();
{% endif %}
    dhtmlxAjax.get( "{{ url('arii_session_update') }}?state=history::"+encodeURIComponent(index)+'::'+state, function (loader) {
    });    
});
/*
var sb = dhxLayout.cells("a").attachStatusBar();
dhxLayout.cells("a").vs[dhxLayout.cells("a").av].sbHeight = 30;
sb.setText('<div id="recinfoArea"></div>');
*/
mygrid.enablePaging(true, 20, 5, "recinfoArea");
mygrid.setPagingSkin("toolbar","dhx_skyblue");
mygrid.setPagingWTMode(true,true,true,[ 5, 10, 20, 50, 100, 200, 400, 800]);
mygrid.setFiltrationLevel(-2);
mygrid.init();
mygrid.setSkin('dhx_skyblue');
mygrid.enableAlterCss("even_row","odd_row");
mygrid.i18n.paging={
      results: "{{ "Results" | trans }}",
      records: "{{ "From" | trans }} ",
      to: " {{ "to" | trans }} ",
      page:"{{ "Page" | trans }} ",
      perpage: "{{ "rows per page" | trans }}",
      first: "{{ "To first Page" | trans }}",
      previous:"{{ "Previous Page" | trans }}",
      found:"{{ "Found records" | trans }}",
      next:"{{ "Next Page" | trans }}",
      last:"{{ "To last Page" | trans }}",
      of:" {{ "of" | trans }} ",
      notfound:"{{ "No Records Found" | trans }}" };
      
{% if  app.request.get('status') != '' %}
max_history=20;
mygrid.loadXML( "{{ url('xml_JID_history_list') }}?ordered="+ordered+"&history="+max_history, function() {
    toolbar.setItemState("deploy",true);
    toolbar.setItemState("history",true);
    mygrid.getFilterElement(2).value='{{ app.request.get('status') }}';
//    mygrid.filterBy(2,"{{ app.request.get('status') }}",true);
    mygrid.expandAll();
});
{% else %}
mygrid.loadXML( "{{ url('xml_JID_history_list') }}?history="+max_history);
{% endif %}
mygrid.enableLightMouseNavigation( true );
// mygrid.attachEvent("onXLE",function(){ });

mygrid.attachEvent("onRowDblClicked",function(id, value){

    if ( this.getUserData(id,"type") === "spooler" )  {
    }
    else /* if  ( this.getUserData(id,"jobtype") === "instance" )  */ {
       dhxLayout.cells("b").progressOn();
        tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true); 
        loggrid.loadXML("{{ url('xml_JID_job_log') }}?id="+id); 
        hstgrid.clearAll();
        hstgrid.loadXML( "{{ url('arii_JID_grid_history_job') }}?id="+id, function () {
           dhxLayout.cells("b").expand();
           toolbar.setItemState("contract",true);
           dhxLayout.cells("b").progressOff();
        });
    }
});

toolbar.attachEvent( "onClick", function(id, value) {
    switch (id) {
        case "refresh":
            GridRefresh();
        break;
        case "deploy":
            mygrid.expandAll();
        break;
        case "print":
            // mygrid.setColumnHidden(1,true);
            mygrid.printView();
            break;
    case "start_jobs":
        StartJobs();
        break;
    case "stop_jobs":
        StopJobs();
        break;
    case "unstop_jobs":
        UnstopJobs();
        break;
    case "rss":
        document.location.href = "{{ url('rss_JID_history_job') }}";
        break;
    case "menu":
        document.location.href = "{{ url('arii_JID_index') }}";
        break;
    case "menu_history":
        document.location.href = "{{ url('arii_JID_history') }}";
        break;
    case "menu_orders":
        document.location.href = "{{ url('arii_JID_orders') }}";
        break;
    case "menu_chains":
        document.location.href = "{{ url('arii_JID_chains') }}";
        break;
    case "menu_planned":
        document.location.href = "{{ url('arii_JID_planned') }}";
        break;
    case "menu_spoolers":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_events":
        document.location.href = "{{ url('arii_JID_events') }}";
        break;
    case "menu_ha":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_msg":
        document.location.href = "{{ url('arii_JID_messages') }}";
        break;
        default:
            alert(id);
    }
});
toolbar.attachEvent("onStateChange", function(id,state) {
    switch (id) {
        case 'deploy':
            if (state) {
                mygrid.expandAll();
            }
            else {
                mygrid.collapseAll();
            }
            break;
        case 'show_time':
            mygrid.setColumnHidden(9,!state);
            break;
        case 'history':
            if (state) {
                max_history = 20;
            }
            else {
                max_history = 0;
            }
            GridRefresh();
            break;
        case 'ordered':
            if (state) {
                ordered = 1;
            }
            else {
                ordered = 0;
            }
            GridRefresh();
            break;
        case 'contract':
            if (state) {
                dhxLayout.cells("b").expand();
                mygrid.enablePaging(true, 10, 5, "recinfoArea"); 
            }
            else {
                dhxLayout.cells("b").collapse();
                mygrid.enablePaging(true, 20, 5, "recinfoArea"); 
             }
             GridRefresh();
            break;
        default:
            break;
    }
 });

var tabbar = dhxLayout.cells("b").attachTabbar();
// tabbar.setImagePath("{{asset("arii/dhtmlx/dhtmlxTabbar/codebase/imgs/")}}");
tabbar.setSkin("dhx_skyblue");
tabbar.addTab("b1","{{ "Information" | trans }}","100px", null, true);
tabbar.addTab("b2","{{ "Log" | trans }}","100px");
tabbar.addTab("b3","{{ "History" | trans }}","100px");

tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}",true);

var loggrid = tabbar.cells("b2").attachGrid();
loggrid.setHeader("{{ "Date" | trans }},{{ "Type" | trans }},{{ "Message" | trans }},{{ "Code" | trans }}");
loggrid.attachHeader("#text_filter,#select_filter,#text_filter,#select_filter");
loggrid.setInitWidths("160,40,*,60");
loggrid.setColAlign("right,left,left,right");
loggrid.setColTypes("ro,ro,ro,ro");
loggrid.setColSorting("date,str,str,int");
loggrid.init();
loggrid.setSkin('dhx_skyblue');

var hstgrid = tabbar.cells("b3").attachGrid();
hstgrid.setHeader("{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Duration" | trans }},{{ "Error" | trans }},{{ "Exit code" | trans }},{{ "Message" | trans }}");
hstgrid.attachHeader("#text_filter,#text_filter,#text_filter,#select_filter,#select_filter,#text_filter");
hstgrid.setInitWidths("130,130,100,60,50,*");
hstgrid.setColAlign("right,right,right,right,right,left");
hstgrid.setColTypes("ro,ro,ro,ro,ro,ro");
hstgrid.setColSorting("date,date,str,int,int,str");
hstgrid.init();
hstgrid.setSkin('dhx_skyblue');
//hstgrid.loadXML( "{{ url('arii_JID_grid_history_job') }}" );
hstgrid.enableAlterCss("even_row","odd_row");
/*
dhtmlxEvent (document.getElementById('master_checkbox'), "click", function(ev){
            //alert("Hello, world!"+ev);
            var value = document.getElementById('master_checkbox').checked;
            mygrid.forEachRow(function(id){
                if (mygrid.getUserData(id,"jobtype") === "instance" || mygrid.getUserData(id,"jobtype") === "ordered_job")
                {
                    mygrid.cells(id,1).setValue(value);
                }
            });
});
*/
dhxLayout.cells("b").collapse();

function GridRefresh() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
    toolbar.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
    var page_number = mygrid.currentPage;
    var checked_id = mygrid.getCheckedRows(1);
    if (checked_id === "")
    {
        mygrid.loadXML("{{ url('xml_JID_history_list') }}?time="+seconds+"&history="+max_history+"&ordered="+ordered, function(){
            mygrid.refreshFilters();
            mygrid.filterByAll();
{% if arii_save_states %}
            mygrid.loadOpenStates();
{% endif %}
            mygrid.changePage(page_number);
        });    
    } else
    {
        mygrid.loadXML("{{ url('xml_JID_history_list') }}?time="+seconds+"&history="+max_history+"&ordered="+ordered+"&checked_rows="+checked_id, function(){
{% if arii_save_states %}
            mygrid.loadOpenStates();
{% endif %}
            mygrid.changePage(page_number);
            mygrid.refreshFilters();
            mygrid.filterByAll();
        });
    }
}

function GlobalRefresh() {
    GridRefresh();
}

var dhxWins = new dhtmlXWindows();
// dhxWins.enableAutoViewport(false);
dhxWins.attachViewportTo("wrapper");
// dhxWins.setImagePath("{{ asset('bundles/ariicore/js/dhtmlx/dhtmlxWindows/codebase/imgs/') }}");

function onShowMenu(rowId, celInd, grid) {
    if(mygrid.getUserData(rowId,"type")==="folder")
    {
        return false;
    }
    var status = grid.cells(rowId, 2 ).getValue();    
    menu.hideItem("start_task");
    menu.hideItem("edit_sep_1");
    menu.hideItem("edit_sep_2");
    menu.hideItem("show_history");
    menu.hideItem("doc");
    menu.hideItem("kill");
    menu.hideItem("stop");
    menu.hideItem("unstop");
    menu.hideItem("kill");
    menu.hideItem("show_why");
    menu.hideItem("job_log");
    menu.hideItem("job_detail");
    menu.hideItem('check_spooler');
    menu.hideItem('pause_spooler');
    menu.hideItem('continue_spooler');
    menu.hideItem('spooler_go');
    menu.hideItem('purge');
    menu.hideItem('terminate_spooler');
    menu.hideItem('pause_spooler');
    menu.hideItem('continue_spooler');    
    // Cas du spooler
    if (mygrid.getUserData(rowId, "type" )=='spooler') {
        menu.showItem('check_spooler');
        {% if is_granted('ROLE_OPERATOR') %}
        menu.showItem('terminate_spooler');
        menu.showItem('spooler_go');
        if (status ==='RUNNING') {
            menu.showItem('pause_spooler');    
        }
        else {
            menu.showItem('continue_spooler');    
        }
        {% endif %} 
        return true;
    } 
    menu.showItem('edit_sep_1');  
    menu.showItem("job_log");
    menu.showItem("job_detail");
    menu.showItem("show_history");
    {% if is_granted('ROLE_OPERATOR') %}
    menu.showItem("start_task");
    menu.showItem('purge');
    {% endif %}
    switch (status) {
    case 'SUCCESS':
        break;
    case 'FAILURE':
        break;
    case 'RUNNING':
        break;
    default:
        // Cas de l'instance
        {% if is_granted('ROLE_OPERATOR') %}
            if (grid.getUserData(rowId, "jobtype" )=='instance') {
                // on ne demarre pas une tache RUNNING
                menu.showItem("kill");
            }
        {% endif %}
        break;
    }
    {% if is_granted('ROLE_OPERATOR') %}
    // job stoppé
    if (grid.cells(rowId, 3).getValue()== 'STOP') {    
        menu.showItem("unstop");
    }
    else {
        menu.showItem("stop");
    }
    // Un job ordonné ne peut être démarré 
    if (grid.getUserData(rowId, "jobtype" )!='ordered_job') {
        menu.showItem("start_task");
    }
    {% endif %} 
    menu.showItem('edit_sep_1');  
    menu.showItem("doc");
return true;
}
</script>
{% include "AriiJIDBundle:_Global:menu.html.twig" %}
{% endblock %}
{% block calendar %}      
    {{ render(controller("AriiJIDBundle:Sidebar:calendar", { 'mode': 'None'} )) }}
{% endblock %}