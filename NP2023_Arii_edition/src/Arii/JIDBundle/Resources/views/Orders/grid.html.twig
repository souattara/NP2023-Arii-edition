{# src/Arii/JIDBundle/Resources/views/Default/history.html.twig #}
{% extends "AriiJIDBundle::layout.html.twig" %}
{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section table_section">
	<!--[if !IE]>start title wrapper<![endif]-->
	<div class="title_wrapper">
		<h2>{{ "Orders" | trans }}</h2>
<ul  class="section_menu">
{% if arii_pro %}
    <li><a href="{{ url('arii_JID_orders_treegrid') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/tree.png') }}"/>&nbsp;{{ "Tree" | trans }}</span></span></a></li>
{% endif %}
    <li><a href="{{ url('arii_JID_orders_grid') }}" class="active"><span><span><img src="{{ asset('bundles/ariicore/images/wa/list.png') }}"/>&nbsp;{{ "List" | trans }}</span></span></a></li>
    <li><a href="{{ url('arii_JID_orders_timeline') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/timeline.png') }}"/>&nbsp;{{ "Timeline" | trans }}</span></span></a></li>
<!--    <li><a href="{{ url('arii_JID_orders_last') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/monitor.png') }}"/>&nbsp;{{ "Monitor" | trans }}</span></span></a></li>
-->
</ul>
                <span class="title_wrapper_left"></span>
		<span class="title_wrapper_right"></span>
	</div>
	<!--[if !IE]>end title wrapper<![endif]-->
<!--[if !IE]>start section content<![endif]-->
	<div class="section_content">
		<!--[if !IE]>start section content top<![endif]-->
		<div class="sct">
			<div class="sct_left">
				<div class="sct_right">
					<div class="sct_left">
                                                <div class="sct_right">
    <!--div id="mygrid" style="height:326px;background-color:white;width:100%"></div> -->
    <div id="mygrid" style="height:576px;background-color:white;position:relative;overflow-x: auto; overflow-y: auto;"></div>
		
						</div>
					</div>
				</div>
			</div>
		</div>
		<!--[if !IE]>end section content top<![endif]-->
		<!--[if !IE]>start section content bottom<![endif]-->
		<span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
		<!--[if !IE]>end section content bottom<![endif]-->
		
	</div>
	<!--[if !IE]>end section content<![endif]-->
</div>
<!--[if !IE]>end section<![endif]-->
<script language="javascript">
var autorefresh = setInterval( "GridRefresh()",30000);
var max_history = 0; // pas d'historique
{% if  app.request.get('ordered')>0 %}
var ordered = 1;
{% else %}
var ordered = 0; // que des standalone
{% endif %}

menu = new dhtmlXMenuObject(null);
menu.setIconsPath( "{{ asset('bundles/ariicore/images/wa/') }}" );
menu.renderAsContextMenu();
menu.loadStruct("{{ url('xml_JID_orders_menu') }}");

var dhxLayout = new dhtmlXLayoutObject("mygrid","2E");
var toolbar = dhxLayout.attachToolbar();
toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
toolbar.loadStruct("{{ url('xml_JID_orders_toolbar') }}", function() {
{% if  app.request.get('ordered')>0 %}
toolbar.setItemState("ordered",true);
{% endif %}
});
/*
toolbar.attachEvent("onStateChange",function(id,state){
    dhtmlxAjax.get("{{ url('arii_global_toolbar_update') }}?"+id+"="+state,function(loader){
        GlobalRefresh();
    });
});
*/
dhxLayout.cells("a").hideHeader();
dhxLayout.cells("a").setHeight(295);
dhxLayout.cells("b").collapse();
dhxLayout.cells("b").setText( "{{ "Detail" | trans }}" );
    
var mygrid = dhxLayout.cells("a").attachGrid();
//mygrid.selMultiRows = true;
mygrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
// mygrid.enableTreeCellEdit(false);
mygrid.setHeader("{{ "Spooler" | trans }},{{ "Job chain" | trans }},{{ "Order" | trans }},{{ "Step" | trans }},{{ "State" | trans }},{{ "Status" | trans }},{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Information" | trans }},{{ "Job name" | trans }}");
mygrid.attachHeader("#select_filter,#text_filter,#text_filter,#numeric_filter,#text_filter,#select_filter,#text_filter,#text_filter,#text_filter,#text_filter");
mygrid.setInitWidths("100,*,140,40,150,100,130,130,*,100");
mygrid.setColAlign("left,left,left,right,left,center,right,right,left,left");
mygrid.setColTypes("ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
mygrid.setColSorting("str,str,str,num,str,str,date,date,str,str");
mygrid.enableContextMenu(menu);
mygrid.attachEvent("onBeforeContextMenu", onShowMenu);

{% if arii_pro %}
/*
var sb = dhxLayout.cells("a").attachStatusBar();
dhxLayout.cells("a").vs[dhxLayout.cells("a").av].sbHeight = 30;
sb.setText('<div id="recinfoArea"></div>');
mygrid.enablePaging(true, 20, 5, "recinfoArea");
mygrid.setPagingSkin("toolbar","dhx_skyblue");
mygrid.setPagingWTMode(true,true,true,[ 5, 10, 20, 50, 100, 200, 400, 800]);
*/
// mygrid.setFiltrationLevel(-2);
{% endif %}
mygrid.init();
mygrid.setSkin('dhx_skyblue');
mygrid.enableAlterCss("even_row","odd_row");
{% if arii_pro %}
    mygrid.i18n.paging={
      results: "{{ "Results" | trans }}",
      records: "{{ "From" | trans }} ",
      to: " {{ "to" | trans }} ",
      page:"{{ "Page" | trans }} ",
      perpage: "{{ "rows per page" | trans }}",
      first: "{{ "To first Page" | trans }}",
      previous:"{{ "Previous Page" | trans }}",
      found:"{{ "Found records" | trans }}",
      next:"{{ "Next Page" | trans }}",
      last:"{{ "To last Page" | trans }}",
      of:" {{ "of" | trans }} ",
      notfound:"{{ "No Records Found" | trans }}" };
{% endif %}
{% if  app.request.get('status') != '' %}
max_history=20;
/*
mygrid.loadXML( "{{ url('xml_JID_orders_grid') }}?ordered="+ordered+"&history="+max_history, function() {
    toolbar.setItemState("deploy",true);
    toolbar.setItemState("history",true);
    mygrid.getFilterElement(2).value='{{ app.request.get('status') }}';
//    mygrid.filterBy(2,"{{ app.request.get('status') }}",true);
    mygrid.expandAll();
});
*/
{% else %}
// mygrid.loadXML( "{{ url('xml_JID_orders_grid') }}?history="+max_history);
{% endif %}
mygrid.enableLightMouseNavigation( true );
// mygrid.attachEvent("onXLE",function(){ });
function OrderDetail(id) {
    dhxLayout.cells("b").progressOn();
    dhxLayout.cells("b").setText("{{ "Order" | trans }}");
    tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_order') }}?id="+id,true);
    // dans tous les cas on recharge le log
    hstgrid.load( "{{ url('arii_JID_grid_history_order') }}?id="+ id, function () {
        loggrid.load( "{{ url('arii_JID_order_log') }}?id="+ id, function () {
        // tabbar.cells("b5").attachURL("{{ url('arii_JID_process_graphviz') }}?order_id="+id,true);
        dhxLayout.cells("b").expand();
        toolbar.setItemState("contract",true);
        dhxLayout.cells("b").progressOff();
      });
    });
}

mygrid.attachEvent("onRowDblClicked",function(id, value){
    return true;
     if(mygrid.getUserData(id,"type")==="step_job")
    {
       dhxLayout.cells("b").progressOn();
       id = id.substr(1);
       dhxLayout.cells("b").setText("{{ "Job" | trans }}");
       tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);
       jobloggrid.load( "{{ url('xml_JID_job_log') }}?id="+id, function () {
            tabbar.showTab("b3");
            tabbar.hideTab("b2",true);
            tabbar.hideTab("b4",true);
            dhxLayout.cells("b").progressOff();
        });
    } 
    else
    {   OrderDetail(id);   }
});

toolbar.attachEvent( "onClick", function(id, value) {
    switch (id) {
        case "refresh":
            GridRefresh();
        break;
        case "deploy":
            mygrid.expandAll();
        break;
        case "print":
            // mygrid.setColumnHidden(1,true);
            mygrid.printView();
            break;
    case "rss":
        document.location.href = "{{ url('rss_JID_history_job') }}";
        break;
    case "menu":
        document.location.href = "{{ url('arii_JID_index') }}";
        break;
    case "menu_history":
        document.location.href = "{{ url('arii_JID_history') }}";
        break;
    case "menu_orders":
        document.location.href = "{{ url('arii_JID_orders') }}";
        break;
    case "menu_chains":
        document.location.href = "{{ url('arii_JID_chains') }}";
        break;
    case "menu_planned":
        document.location.href = "{{ url('arii_JID_planned') }}";
        break;
    case "menu_spoolers":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_events":
        document.location.href = "{{ url('arii_JID_events') }}";
        break;
    case "menu_ha":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_msg":
        document.location.href = "{{ url('arii_JID_messages') }}";
        break;
        default:
            alert(id);
    }
});

toolbar.attachEvent("onStateChange", function(id,state) {
    switch (id) {
        case 'deploy':
            if (state) {
                mygrid.expandAll();
            }
            else {
                mygrid.collapseAll();
            }
            break;
        case 'show_time':
            mygrid.setColumnHidden(9,!state);
            break;
        case 'history':
            if (state) {
                max_history = 20;
            }
            else {
                max_history = 0;
            }
            GridRefresh();
            break;
        case 'ordered':
            if (state) {
                ordered = 1;
            }
            else {
                ordered = 0;
            }
            GridRefresh();
            break;
        case 'contract':
            if (state) {
                dhxLayout.cells("b").expand();
                mygrid.enablePaging(true, 10, 5, "recinfoArea"); 
            }
            else {
                dhxLayout.cells("b").collapse();
                mygrid.enablePaging(true, 20, 5, "recinfoArea"); 
             }
             GridRefresh();
            break;
        case 'gantt':
            mygrid.setColumnHidden(5,state);      
            mygrid.setColumnHidden(6,state);      
            mygrid.setColumnHidden(7,state);  
            mygrid.setColumnHidden(8,state);   
            mygrid.setColumnHidden(9,!state);  
            break;
        default:
            break;
    }
 });

var tabbar = dhxLayout.cells("b").attachTabbar();
// tabbar.setImagesPath("{{asset("arii/dhtmlx/dhtmlxTabbar/codebase/imgs/")}}");
tabbar.setSkin("dhx_skyblue");
tabbar.addTab("b1","{{ "Information" | trans }}","100px", null, true);
tabbar.addTab("b2","{{ "Log" | trans }}","100px");
tabbar.addTab("b3","{{ "History" | trans }}","100px");
// tabbar.setTabActive("b1");

// tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}",true);

var loggrid = tabbar.cells("b2").attachGrid();
loggrid.setHeader("{{ "Date" | trans }},{{ "Type" | trans }},{{ "Message" | trans }},{{ "Code" | trans }}");
loggrid.attachHeader("#text_filter,#select_filter,#text_filter,#select_filter");
loggrid.setInitWidths("160,40,*,60");
loggrid.setColAlign("right,left,left,right");
loggrid.setColTypes("ro,ro,ro,ro");
loggrid.setColSorting("date,str,str,int");
loggrid.init();
loggrid.setSkin('dhx_skyblue');

var hstgrid = tabbar.cells("b3").attachGrid();
hstgrid.setHeader("{{ "State" | trans }},{{ "Step" | trans }},{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Duration" | trans }},{{ "Message" | trans }}");
hstgrid.attachHeader("#select_filter,#select_filter,#text_filter,#text_filter,#text_filter,#text_filter");
hstgrid.setInitWidths("200,60,140,140,100,*");
hstgrid.setColTypes("ro,ro,ro,ro,ro,ro");
hstgrid.setColAlign("left,right,right,right,right,left");
hstgrid.setColSorting("str,int,date,date,str,str");
// hstgrid.enableTreeGridLines(true);
// hstgrid.enableTreeCellEdit(false);
hstgrid.setSkin('dhx_skyblue');
hstgrid.init();

hstgrid.enableAlterCss("even_row","odd_row");

//dhxLayout.cells("b").collapse();

function GridRefresh() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
    toolbar.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
{% if arii_pro %}
    var page_number = mygrid.currentPage;
{% endif %}
    mygrid.loadXML("{{ url('xml_JID_orders_grid') }}?time="+seconds+"&history="+max_history+"&ordered="+ordered, function(){
{% if arii_pro %}
        mygrid.changePage(page_number);
{% endif %}
        mygrid.refreshFilters();
        mygrid.filterByAll();
    });    
}

// mygrid.loadXML("{{ url('xml_JID_orders_grid') }}?history="+max_history+"&ordered="+ordered);

function GlobalRefresh() {
    GridRefresh();
}

var dhxWins = new dhtmlXWindows();
// dhxWins.enableAutoViewport(false);
dhxWins.attachViewportTo("wrapper");
// dhxWins.setImagePath("{{ asset('bundles/ariicore/js/dhtmlx/dhtmlxWindows/codebase/imgs/') }}");

function onShowMenu(rowId, celInd, grid) {
    if(mygrid.getUserData(rowId,"type")==="folder")
    {
        return false;
    }
    var status = grid.cells(rowId, 5 ).getValue();    
    // RAZ
    menu.hideItem('suspend_order');
    menu.hideItem('resume_order');
    menu.hideItem('reset_order');
    menu.hideItem('remove_setback');
    menu.hideItem('stop_chain');
    menu.hideItem('unstop_chain');
    menu.hideItem('stop_node');
    menu.hideItem('unstop_node');
    menu.hideItem('skip_node');
    menu.hideItem('unskip_node');
    menu.hideItem('stop_job');
    menu.hideItem('unstop_job');
    menu.hideItem('stop_job');
    menu.hideItem('continue_spooler');
    menu.hideItem('pause_spooler');
    if (status == 'SUSPENDED') { 
        menu.showItem('resume_order'); 
        menu.showItem('reset_order'); 
    }
    else if (status == 'RUNNING') 
        { menu.showItem('suspend_order'); }
    if (status == 'SPOOLER STOP.') 
        { menu.showItem('continue_spooler'); }
    if (status == 'SPOOLER PAUSED') 
        { menu.showItem('continue_spooler'); }
    else 
        { menu.showItem('pause_spooler'); }
    if (status == 'CHAIN STOP.') 
        { menu.showItem('unstop_chain'); }
    else
        { menu.showItem('stop_chain'); }
    if (status == 'JOB STOP.') 
        { menu.showItem('unstop_job'); }
    else 
        { menu.showItem('stop_job'); }
    if (status == 'NODE STOP.') 
        { menu.showItem('unstop_node'); }
    else 
        { menu.showItem('stop_node'); }
    if (status == 'NODE SKIP.') 
        { menu.showItem('unskip_node'); }
    else 
        { menu.showItem('skip_node'); }

return true;
}
</script>
{% include "AriiJIDBundle:_Global:menu.html.twig" %}
{% endblock %}
{% block calendar %}      
    {{ render(controller("AriiJIDBundle:Sidebar:calendar", { 'mode': 'Past'} )) }}
{% endblock %}