{# src/Arii/JIDBundle/Resources/views/index.html.twig #}
{% extends "AriiJIDBundle::layout.html.twig" %}
{% block dhtmlx %}
	<title>Ari'i</title>
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/ariicore/dhtmlx/dhtmlx_pro_full/dhtmlx.css') }}" />
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlx_pro_full/dhtmlx.js') }}" type="text/javascript"></script>
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlxCalendar/codebase/ext/dhtmlxtimepicker.js') }}" type="text/javascript" charset="utf-8"></script>
        <link rel="stylesheet" type="text/css" href="{{ asset('bundles/ariicore/dhtmlx/dhtmlxWindows/codebase/status_toolbar_layout.css') }}" />
{% endblock dhtmlx %}
{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section table_section">
	<!--[if !IE]>start title wrapper<![endif]-->
	<div class="title_wrapper">
		<h2>{{ "Plan" | trans }}</h2>
<ul  class="section_menu">
      <li><a href="{{ url('arii_JID_planned') }}" class="active"><span><span><img src="{{ asset('bundles/ariicore/images/wa/list.png') }}"/>&nbsp;{{ "List" | trans }}</span></span></a></li>
      <li><a href="{{ url('arii_JID_planned_timeline') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/timeline.png') }}"/>&nbsp;{{ "Timeline" | trans }}</span></span></a></li>
</ul>
		<span class="title_wrapper_left"></span>
		<span class="title_wrapper_right"></span>
	</div>
	<!--[if !IE]>end title wrapper<![endif]-->
<!--[if !IE]>start section content<![endif]-->
	<div class="section_content">
		<!--[if !IE]>start section content top<![endif]-->
		<div class="sct">
			<div class="sct_left">
				<div class="sct_right">
					<div class="sct_left">
                                                <div class="sct_right">
    <div id="mygrid" style="height:576px;background-color:white;overflow:hidden;position: relative;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
<script language="javascript">
var autorefresh = setInterval( "GridRefresh()",30000);

var menu = new dhtmlXMenuObject(null);
menu.setIconsPath( "{{ asset('bundles/ariicore/images/menu/') }}" );
/*menu.setImagePath( "{{ asset('bundles/ariicore/images/menu') }}" );*/
menu.renderAsContextMenu();
menu.attachEvent("onClick", onButtonClick);
menu.loadStruct("{{ url('xml_JID_planned_menu') }}");

var dhxLayout = new dhtmlXLayoutObject("mygrid","2E");

var toolbar;
toolbar = dhxLayout.attachToolbar();
toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
toolbar.loadStruct("{{ url('xml_JID_planned_toolbar') }}");
toolbar.attachEvent( "onClick", function(id, value) {
    switch (id) {
        case "refresh":
            GridRefresh();
        break;
    case "menu":
        document.location.href = "{{ url('arii_JID_index') }}";
        break;
    case "menu_history":
        document.location.href = "{{ url('arii_JID_history') }}";
        break;
    case "menu_orders":
        document.location.href = "{{ url('arii_JID_orders') }}";
        break;
    case "menu_chains":
        document.location.href = "{{ url('arii_JID_chains') }}";
        break;
    case "menu_planned":
        document.location.href = "{{ url('arii_JID_planned') }}";
        break;
    case "menu_spoolers":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_ha":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_msg":
        document.location.href = "{{ url('arii_JID_messages') }}";
        break;
    case 'ical':
            document.location.href = "{{ url('ical_JID_planned') }}";
            break;
        default:
            alert(id);
    }
});
toolbar.attachEvent("onStateChange", function(id,state) {
    switch (id) {
        case 'contract':
            if (state) {
                dhxLayout.cells("b").expand();
                mygrid.enablePaging(true, 10, 5, "recinfoArea"); 
            }
            else {
                dhxLayout.cells("b").collapse();
                mygrid.enablePaging(true, 20, 5, "recinfoArea"); 
             }
             GridRefresh();
            break;
/*        case 'deploy':
            if (state) {
                mygrid.expandAll();
            }
            else {
                mygrid.collapseAll();
            }
            break;
*/
        default:
            break;
    }
 });
 
toolbar.attachEvent( "onValueChange", function(id, value) {
   switch (id) {
        case "slider":
            clearInterval( autorefresh );
            GridRefresh();
            autorefresh = setInterval( "GridRefresh()",value*1000);
        break;
        default:
            alert(id);
    }
});

dhxLayout.cells("a").hideHeader();
dhxLayout.cells("a").setHeight(295);
dhxLayout.cells("b").setWidth(550);
dhxLayout.cells("b").setText("Planned Detail");

var tabbar = dhxLayout.cells("b").attachTabbar();
tabbar.setImagePath("{{asset("arii/dhtmlx/dhtmlxTabbar/codebase/imgs/")}}");
tabbar.setSkin("dhx_skyblue");
tabbar.addTab("b1","{{ "Information" | trans }}","100px");
// tabbar.addTab("b2","{{ "Log" | trans }}","100px");
tabbar.setTabActive("b1");

var mygrid = dhxLayout.cells("a").attachGrid();
mygrid.selMultiRows = true;
mygrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
mygrid.enableTreeCellEdit(false);
mygrid.setHeader("{{ "Location" | trans }},{{ "Status" | trans }},#cspan,{{ "Executed" | trans }},{{ "Delay" | trans }},{{ "Begin" | trans }},{{ "End" | trans }},{{ "Cycle" | trans }}");
mygrid.attachHeader("#text_filter,#select_filter,#cspan,#text_filter,#text_filter,#text_filter,#text_filter,#rspan");
mygrid.setInitWidths("*,80,30,130,110,120,120,60");
mygrid.setColAlign("left,right,right,right,right,right,right,right");
mygrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro");
mygrid.enableTreeGridLines(true);
mygrid.setColSorting("str,str,date,str,date,date,str,str");
mygrid.enableContextMenu(menu);
mygrid.attachEvent("onBeforeContextMenu", onShowMenu);
/*
mygrid.attachEvent("onOpenEnd",function(){
    mygrid.saveOpenStates();
});
*/
var sb = dhxLayout.cells("a").attachStatusBar();
dhxLayout.cells("a").vs[dhxLayout.cells("a").av].sbHeight = 30;
sb.setText('<div id="recinfoArea"></div>');
mygrid.enablePaging(true, 20, 5, "recinfoArea");
mygrid.setPagingSkin("toolbar","dhx_skyblue");
mygrid.setPagingWTMode(true,true,true,[ 5, 10, 20, 50, 100, 200, 400, 800]);

mygrid.setFiltrationLevel(-2);
mygrid.init();
// mygrid.loadOpenStates();
mygrid.setSkin('dhx_skyblue');
mygrid.i18n.paging={
      results: "{{ "Results" | trans }}",
      records: "{{ "From" | trans }}",
      to: " {{ "to" | trans }} ",
      page:"{{ "Page" | trans }} ",
      perpage: "{{ "rows per page" | trans }}",
      first: "{{ "To first Page" | trans }}",
      previous:"{{ "Previous Page" | trans }}",
      found:"{{ "Found records" | trans }}",
      next:"{{ "Next Page" | trans }}",
      last:"{{ "To last Page" | trans }}",
      of:" {{ "of" | trans }} ",
      notfound:"{{ "No Records Found" | trans }}" };

//mygrid.kidsXmlFile = "database/state_job_chains.php";
{% if  app.request.get('status') != '' %}
mygrid.loadXML( "{{ url('xml_JID_planned_list') }}?status={{ app.request.get('status') }}", function() {
//    toolbar.setItemState("deploy",true);
    mygrid.filterBy(1,"{{ app.request.get('status') }}",true);
    mygrid.expandAll();
});
{% else %}
mygrid.loadXML( "{{ url('xml_JID_planned_list') }}");
{% endif %}
mygrid.enableLightMouseNavigation( true );
mygrid.attachEvent("onXLE",function(){
    //will be called after each xml loading
//    mygrid.refreshFilters();
//    mygrid.filterByAll();
});
mygrid.attachEvent("onRowDblClicked",function(id, value){
    if(!isNaN(id))
    {
        tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_planned') }}?id="+id,true);
        dhxLayout.cells("b").expland();
//        tabbar.cells("b2").attachURL("{{ url('arii_JID_planned_log') }}?id="+id,true);
    }
});
dhxLayout.cells("b").collapse();

function onShowMenu(rowId,cleInd,grid) 
{
    return false;
    menu.showItem("start_job");
    menu.showItem("add_order");
    if (mygrid.getUserData(rowId,"type")==="standalone_job")
    {
        menu.hideItem("add_order");
        return true;
    }
    else if (mygrid.getUserData(rowId,"type")==="order")
    {
        menu.hideItem("start_job");
        return true;
    }

return false;
}

// Autorefresh

function GridRefresh() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
    toolbar.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
    //mygrid.clearAll();
    var page_number = mygrid.currentPage;
    mygrid.load( "{{ url('xml_JID_planned_list') }}"+'?time='+seconds,  function(){
/*
            if (toolbar.getItemState("deploy")) {
                mygrid.expandAll();
            }
            else {
                mygrid.collapseAll();
            }
            mygrid.loadOpenStates();
*/
            mygrid.changePage(page_number); 
            mygrid.refreshFilters();
            mygrid.filterByAll();
        });
}

var dhxWins = new dhtmlXWindows();
dhxWins.enableAutoViewport(false);
dhxWins.attachViewportTo("wrapper");
dhxWins.setImagePath("{{ asset('bundles/ariicore/js/dhtmlx/dhtmlxWindows/codebase/imgs/') }}");

function StartJob( id ) { 
    var largeur = 600;
        msg = dhxWins.createWindow( "msgwin" , (document.getElementById("wrapper").offsetWidth-largeur)/2, 50, largeur, 500 );
        msg.setText("{{ "Start job" | trans }} "+id);
    var winLayout;
    winLayout = msg.attachLayout("2E");
    winLayout.cells("a").hideHeader();
    winLayout.cells("a").setHeight(300);
    winLayout.cells("b").setText("Parameters");
    winLayout.cells("b").hideHeader();

    winLayout.cells("a").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true);
    
    var toolbar;
    toolbar = winLayout.cells("b").attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct("{{ url('arii_JID_toolbar_start_job') }}",function(){
        GBCalendar = new dhtmlXCalendarObject(toolbar.getInput('ref_date'));
        GBCalendar.setDateFormat("%Y-%m-%d %H:%i:%s");
        GBCalendar.setWeekStartDay(1);
    });

    toolbar.attachEvent("onClick",function(itemid){
        switch(itemid) {
            case "submit":
                msg.progressOn();
                var params = new Array();
                dhxgrid.forEachRow(function(id){
                    var param = dhxgrid.cells(id,0).getValue() + "=" + encodeURIComponent(dhxgrid.cells(id,1).getValue());
                    params.push(param);
                });
                var paramsStr = params.join(",");
                var start_time = toolbar.getValue("ref_date");
                dhtmlx.message({
                type: "Notice",
                text: "{{ "Start job" | trans }} <strong>"+id+"</strong>" });
                msg.close();

                dhtmlxAjax.post("{{ url('arii_XML_Command') }}","command=start_job&params="+encodeURIComponent(params)+"&time="+start_time+"&job_id="+id,function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    GridRefresh();
                });
                break;
            case "new":
                dhxgrid.addRow(dhxgrid.getRowsNum()+1,"");
                break;
            case "cancel":
                msg.close();
                break;
            default:
                break;
        }
        return true;
    });

    var dhxgrid = winLayout.cells("b").attachGrid();
    dhxgrid.selMultiRows = true;
    dhxgrid.setHeader("{{ "Name" | trans }},{{ "Value" | trans }}");
    dhxgrid.setColTypes("ed,ed");
    dhxgrid.setInitWidths("*,*");
    dhxgrid.setPagingSkin("toolbar","dhx_skyblue");
    dhxgrid.init();
    dhxgrid.loadXML("{{ url('xml_JID_start_job_parameters') }}?id="+id);
return true;
}

function onButtonClick(menuitemId) {
    var data = mygrid.contextID.split("_");
    //rowInd_colInd;
    var rId = data[0];
    var cInd = data[1];
    // alert("rId "+rId+" cInd "+cInd);
    switch (menuitemId) {
        case "show_log":
            JobLog( rId );
            break;
        case "start_task":
            StartJob( rId );
            break;
        default:
            alert(menuitemId);    
    }
    return true;
}

function GlobalRefresh()
{
    GridRefresh();
}

</script>
		<!--[if !IE]>end section content top<![endif]-->
		<!--[if !IE]>start section content bottom<![endif]-->
		<span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
		<!--[if !IE]>end section content bottom<![endif]-->
		
	</div>
	<!--[if !IE]>end section content<![endif]-->
</div>
<!--[if !IE]>end section<![endif]-->
{% endblock %}
{% block calendar %}      
    {{ render(controller("AriiJIDBundle:Sidebar:calendar", { 'mode': 'Future'} )) }}
{% endblock %}