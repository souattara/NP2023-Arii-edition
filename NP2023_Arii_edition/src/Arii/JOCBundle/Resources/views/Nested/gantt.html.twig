{# src/Arii/JOCBundle/Resources/views/orders.html.twig #}
{% extends "AriiJOCBundle::layout.html.twig" %}
{% block dhtmlx %}
	<title>Ari'i</title>
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/ariicore/dhtmlx/dhtmlx_pro_full/dhtmlx.css') }}" />
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlx_pro_full/dhtmlx.js') }}" type="text/javascript"></script>
	<script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlxLayout/codebase/dhtmlxlayout.js') }}" type="text/javascript" charset="utf-8"></script>
	<script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlxGantt/codebase/dhtmlxgantt.js') }}" type="text/javascript" charset="utf-8"></script>
	<link rel="stylesheet" href="{{ asset('bundles/ariicore/dhtmlx/dhtmlxGantt/codebase/skins/dhtmlxgantt_skyblue.css') }}" type="text/css" media="screen" title="no title" charset="utf-8">
        <link rel="stylesheet" type="text/css" href="{{ asset('bundles/ariicore/dhtmlx/dhtmlxPopup/codebase/skins/dhtmlxpopup_dhx_skyblue.css') }}"/>
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlxPopup/codebase/dhtmlxpopup.js') }}"></script>
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlxForm/codebase/dhtmlxform.js') }}"></script>
        <script src="{{ asset('bundles/ariicore/dhtmlx/dhtmlxForm/codebase/ext/dhtmlxform_item_calendar.js') }}"></script>
{% endblock dhtmlx %}
{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section table_section">
	<!--[if !IE]>start title wrapper<![endif]-->
	<div class="title_wrapper">
		<h2>{{ "Orders" | trans }}</h2>
<ul  class="section_menu">
</ul>
		<span class="title_wrapper_left"></span>
		<span class="title_wrapper_right"></span>
	</div>
	<!--[if !IE]>end title wrapper<![endif]-->
<!--[if !IE]>start section content<![endif]-->
	<div class="section_content">
		<!--[if !IE]>start section content top<![endif]-->
		<div class="sct">
			<div class="sct_left">
				<div class="sct_right">
					<div class="sct_left">
                                                <div class="sct_right">
<div id="toolbarObj"></div>
<div id="MyGantt" style="height:576px;background-color:white;position:relative;overflow:hidden;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
        </div>
</div>
<style>
gantt_task_line.custom_css {
    background-color: #65c16f;
    background-color: red;
    border: 1px solid #3c9445;
}
gantt_task_line.custom_css  .gantt_task_progress {
    background-color: #65c16f;
}
.red .gantt_cell, .odd.red .gantt_cell,
.red .gantt_task_cell, .odd.red .gantt_task_cell{
    background-color: #FDE0E0;
}
.green .gantt_cell, .odd.green .gantt_cell,
.green .gantt_task_cell, .odd.green .gantt_task_cell {
    background-color: #BEE4BE;
}
.gantt_task_link.error .gantt_line_wrapper div{
        background-color: #dd5640;
}
.gantt_task_link.error:hover .gantt_line_wrapper div{
        box-shadow: 0 0 5px 0px #dd5640;
}
.gantt_task_link.error .gantt_link_arrow_right{
        border-left-color: #dd5640;
}


.gantt_task_link.job_chain .gantt_line_wrapper div{
        background-color: #7576ba;
}
.gantt_task_link.job_chain:hover .gantt_line_wrapper div{
        box-shadow: 0 0 5px 0px #7576ba;
}
.gantt_task_link.job_chain .gantt_link_arrow_right{
        border-left-color: #7576ba;
}

.gantt_task_link.next .gantt_line_wrapper div{
        background-color: #55d822;
}
.gantt_task_link.next:hover .gantt_line_wrapper div{
        box-shadow: 0 0 5px 0px #55d822;
}
.gantt_task_link.next .gantt_link_arrow_left{
        border-right-color: #55d822;
}
.gantt_tree_icon.gantt_folder_C_open {
    background-image: url( '{{ asset('bundles/ariicore/images/wa/job_chain.png') }}' );
}
.gantt_tree_icon.gantt_folder_C_closed {
    background-image: url( '{{ asset('bundles/ariicore/images/wa/job_chain.png') }}' );
}
.gantt_tree_icon.gantt_folder_O_open {
    background-image: url( '{{ asset('bundles/ariicore/images/wa/order.png') }}' );
} 
.gantt_tree_icon.gantt_folder_O_closed {
    background-image: url( '{{ asset('bundles/ariicore/images/wa/order.png') }}' );
} 
</style>
<script>
function ScaleConfig(value){
    switch (value) {
        case "day":
            gantt.config.subscales = [
                    { unit: "hour", 
                      step: 1, 
                      date: "%H:%i" }
            ];
            gantt.config.scale_height = 40;
            gantt.templates.date_scale = null;
            gantt.config.min_column_width = 40;
/*
            gantt.config.scale_unit = "day";
            gantt.config.step = 1;
            gantt.config.date_scale = "%d %M";
            gantt.config.subscales = [];
            gantt.config.scale_height = 27;
            gantt.templates.date_scale = null;
*/                        break;
        case "month":
            var weekScaleTemplate = function(date){
                    var dateToStr = gantt.date.date_to_str("%d %M");
                    var endDate = gantt.date.add(gantt.date.add(date, 1, "week"), -1, "day");
                    return dateToStr(date) + " - " + dateToStr(endDate);
            };

            gantt.config.scale_unit = "week";
            gantt.config.step = 1;
            gantt.templates.date_scale = weekScaleTemplate;
            gantt.config.subscales = [
                    {unit:"day", step:1, date:"%D" }
            ];
            gantt.config.scale_height = 50;
            break;
        case "week":
            gantt.config.scale_unit = "month";
            gantt.config.date_scale = "%F, %Y";
            gantt.config.subscales = [
                    {unit:"day", step:1, date:"%j, %D" }
            ];
            gantt.config.scale_height = 50;
            gantt.templates.date_scale = null;
            break;
        case "year":
            gantt.config.scale_unit = "year";
            gantt.config.step = 1;
            gantt.config.date_scale = "%Y";
            gantt.config.min_column_width = 50;

            gantt.config.scale_height = 90;
            gantt.templates.date_scale = null;

            var monthScaleTemplate = function(date){
                    var dateToStr = gantt.date.date_to_str("%M");
                    var endDate = gantt.date.add(date, 2, "month");
                    return dateToStr(date) + " - " + dateToStr(endDate);
            };

            gantt.config.subscales = [
                    {unit:"month", step:3, template:monthScaleTemplate},
                    {unit:"month", step:1, date:"%M" }
            ];
            break;
    }
}

function setScaleConfig(value){
    ScaleConfig(value);
    gantt.render();
}

gantt.locale = {
    date: {
        month_full: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", 
        "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
        month_short: ["Jan", "Fév", "Mar", "Avr", "Mai", "Juin", "Juil", "Aôu", 
        "Sep", "Oct", "Nov", "Déc"],
        day_full: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", 
        "Vendredi", "Samedi"],
        day_short: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"]
    },
    labels:{
        new_task:"Tâche neuve",
        icon_save:"Enregistrer",
        icon_cancel:"Annuler",
        icon_details:"Détails",
        icon_edit:"Modifier",
        icon_delete:"Effacer",
        confirm_closing:"",//Vos modifications seront perdus, êtes-vous sûr ?
        confirm_deleting:"L'événement sera effacé sans appel, êtes-vous sûr ?",
        section_description:"Description",
        section_time:"Période",
        /* grid columns */
        column_text :  "Tâche",
        column_start_date : "Date initiale",
        column_duration : "Durée",
        column_add : "",
        /* link confirmation */
        confirm_link_deleting:"Dépendance sera effacée sans retour, êtes-vous sûr?",
        link_from: "De",
        link_to: "Jusqu'à",
        link_start: "Début",
        link_end: "Fin",
 
        minutes: "Minutes",
        hours: "Heures",
        days: "Jours",
        weeks: "Semaine",
        months: "Mois",
        years: "Années"
    }
};

gantt.config.columns =  [
    {name:"text",       label:"{{ "Task name" | trans }}",  width:"*", tree:true }
];

// gantt.xy.scale_height = 2*28;
gantt.templates.task_class = function(st,end,item) {
   return item.$level==0?"custom_css":"";
};
gantt.templates.task_text=function(start,end,task){
    return '';
};
gantt.templates.rightside_text = function(start, end, task){
        return task.text;
}; 

gantt.templates.leftside_text = function(start, end, task){
return task.id;
        //    return "Tache: "+task.task;
}; 

gantt.templates.rightside_text = function(start, end, task){
return task.text;
}; 

gantt.config.xml_date = "%Y-%m-%d %H:%i:%s";
gantt.config.api_date = "%Y-%m-%d %H:%i:%s";
gantt.config.grid_width = 280;
gantt.config.add_column = false;
gantt.templates.grid_row_class = function(item) {
    if (item.progress  == 0) return "red";
    if (item.progress >= 1) return "green";
};
gantt.templates.task_row_class = function(start_date, end_date, item) {
    if (item.progress  == 0) return "red";
    if (item.progress >= 1) return "green";
};
gantt.templates.link_class = function(link){
    return link.state;
};
gantt.templates.grid_folder = function(item) {
    type = item.id.substr(0,1);
    if ( type==='F') {
        return "<div class='gantt_tree_icon gantt_folder_" + (item.$open ? "open" : "closed") + "'></div>";
    }
    return "<div class='gantt_tree_icon gantt_folder_" + type +"_"+
    (item.$open ? "open" : "closed") + "'></div>";
};
gantt.config.columns = [
    {name:"text", label:"Task name", tree:true, width:'*' }
/*    ,
    {name:"progress", label:"Progress", width:80, align: "center",
        template: function(item) {
            if (item.progress >= 1)
                return "Complete";
            if (item.progress == 0)
                return "Not started";
            return Math.round(item.progress*100) + "%";
        }
    }
*/
];

ScaleConfig('day');

gantt.init("MyGantt");
gantt.load("{{ url('xml_JOC_orders_gantt') }}");

var toolbar;
toolbar = new dhtmlXToolbarObject("toolbarObj");
toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
toolbar.loadStruct("{{ url('arii_JOC_toolbar') }}");

gantt.attachEvent("onBeforeTaskDisplay", function(id, task){
    return true;
});

function FilterType(parent){
    return true;
    task_type = gantt.getTask(parent).type;
    if (( task_type !='' ) & ( toolbar.getItemState("type_".task_type) == false ) ) {
        return false;
    }

    var child = gantt.getChildren(parent);
    for(var i = 0; i < child.length; i++){
        if(FilterType(child[i]))
            return true;
    }
    return true;
}

gantt.attachEvent("onBeforeTaskDisplay", function(id, task){
return FilterType(id);
});
  
function RefreshData(id) {
    alert(id);
    gantt.refreshData();
}
    
function GlobalRefresh() {
/*    gantt.clearAll();
    gantt.load("{{ url('xml_JOC_orders_gantt') }}");
*/
dhtmlxAjax.get("{{ url('xml_JOC_orders_gantt') }}", function(loader){
      gantt.clearAll();
      gantt.parse(loader.xmlDoc.responseText);
 });
//    gantt.refreshData();
};
</script>
{% endblock %}
