<?php

namespace Proxies\__CG__\Arii\ReportBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EZV extends \Arii\ReportBundle\Entity\EZV implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'id', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'name', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'role', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'status', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'last_update', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'installation', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'removed', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'serial', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'rdi', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'rda', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'rdm', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_status', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_platform', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_type', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_policy', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_agent', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_select', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_date', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_no', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_alarm'];
        }

        return ['__isInitialized__', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'id', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'name', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'role', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'status', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'last_update', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'installation', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'removed', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'serial', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'rdi', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'rda', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'rdm', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_status', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_platform', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_type', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_policy', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_agent', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_select', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_date', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_no', '' . "\0" . 'Arii\\ReportBundle\\Entity\\EZV' . "\0" . 'backup_alarm'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EZV $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFunction($function)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFunction', [$function]);

        return parent::setFunction($function);
    }

    /**
     * {@inheritDoc}
     */
    public function getFunction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFunction', []);

        return parent::getFunction();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastUpdate($lastUpdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastUpdate', [$lastUpdate]);

        return parent::setLastUpdate($lastUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastUpdate', []);

        return parent::getLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstallation($installation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstallation', [$installation]);

        return parent::setInstallation($installation);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstallation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstallation', []);

        return parent::getInstallation();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoved($removed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoved', [$removed]);

        return parent::setRemoved($removed);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoved', []);

        return parent::getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerial($serial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerial', [$serial]);

        return parent::setSerial($serial);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerial', []);

        return parent::getSerial();
    }

    /**
     * {@inheritDoc}
     */
    public function setRdi($rdi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRdi', [$rdi]);

        return parent::setRdi($rdi);
    }

    /**
     * {@inheritDoc}
     */
    public function getRdi()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRdi', []);

        return parent::getRdi();
    }

    /**
     * {@inheritDoc}
     */
    public function setRda($rda)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRda', [$rda]);

        return parent::setRda($rda);
    }

    /**
     * {@inheritDoc}
     */
    public function getRda()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRda', []);

        return parent::getRda();
    }

    /**
     * {@inheritDoc}
     */
    public function setRdm($rdm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRdm', [$rdm]);

        return parent::setRdm($rdm);
    }

    /**
     * {@inheritDoc}
     */
    public function getRdm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRdm', []);

        return parent::getRdm();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupStatus($backupStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupStatus', [$backupStatus]);

        return parent::setBackupStatus($backupStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupStatus', []);

        return parent::getBackupStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupPlatform($backupPlatform)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupPlatform', [$backupPlatform]);

        return parent::setBackupPlatform($backupPlatform);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupPlatform()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupPlatform', []);

        return parent::getBackupPlatform();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupType($backupType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupType', [$backupType]);

        return parent::setBackupType($backupType);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupType', []);

        return parent::getBackupType();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupPolicy($backupPolicy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupPolicy', [$backupPolicy]);

        return parent::setBackupPolicy($backupPolicy);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupPolicy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupPolicy', []);

        return parent::getBackupPolicy();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupAgent($backupAgent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupAgent', [$backupAgent]);

        return parent::setBackupAgent($backupAgent);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupAgent', []);

        return parent::getBackupAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupSelect($backupSelect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupSelect', [$backupSelect]);

        return parent::setBackupSelect($backupSelect);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupSelect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupSelect', []);

        return parent::getBackupSelect();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupDate($backupDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupDate', [$backupDate]);

        return parent::setBackupDate($backupDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupDate', []);

        return parent::getBackupDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupNo($backupNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupNo', [$backupNo]);

        return parent::setBackupNo($backupNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupNo', []);

        return parent::getBackupNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupAlarm($backupAlarm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupAlarm', [$backupAlarm]);

        return parent::setBackupAlarm($backupAlarm);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupAlarm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupAlarm', []);

        return parent::getBackupAlarm();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

}
